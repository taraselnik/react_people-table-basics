{"version":3,"sources":["Pages/HomePage.tsx","Pages/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","Pages/PersonLink.tsx","Pages/PeopleTable.tsx","Pages/PeoplePage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","mother","useMemo","find","a","motherName","father","fatherName","useParams","born","died","undefined","PeoplePage","useState","setPeople","isLoaded","setIsLoaded","isError","setIsError","fetchPeople","useCallback","inData","useEffect","length","map","PageNavLink","text","isActive","NavBar","role","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4b61dfb0.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ person, people }) => {\n  const mother = useMemo(() => {\n    return people.find(a => a.name === person.motherName);\n  }, []);\n\n  const father = useMemo(() => {\n    return people.find(a => a.name === person.fatherName);\n  }, []);\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother !== undefined ? (<PersonLink person={mother} />)\n          : person.motherName || '-'}\n      </td>\n\n      <td>\n        {father !== undefined ? (<PersonLink person={father} />)\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState<boolean>(true);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const fetchPeople = useCallback(async () => {\n    setIsLoaded(false);\n    try {\n      const inData = await getPeople();\n\n      setPeople(inData);\n    } catch (inError) {\n      setIsError(true);\n    } finally {\n      setIsLoaded(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isLoaded\n            ? <Loader />\n            : (\n              <>\n                {isError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {people.length <= 0 && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <table\n                  data-cy=\"peopleTable\"\n                  className=\"table\n                  is-striped is-hoverable is-narrow is-fullwidth\"\n                >\n                  <thead>\n                    <tr>\n                      <th>Name</th>\n                      <th>Sex</th>\n                      <th>Born</th>\n                      <th>Died</th>\n                      <th>Mother</th>\n                      <th>Father</th>\n                    </tr>\n                  </thead>\n\n                  <tbody>\n\n                    {people.map(person => (\n                      <PeopleTable\n                        key={person.slug}\n                        person={person}\n                        people={people}\n                      />\n                    ))}\n                  </tbody>\n                </table>\n              </>\n            )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const NavBar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './Pages/HomePage';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NavBar } from './components/NavBar/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}